name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "28 13 * * 1"

env:
  CARGO_TERM_COLOR: always

jobs:
  cargo:
    name: Cargo
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy
          cache: false
      - name: Rust Cache
        uses: swatinem/rust-cache@v2
        with:
          key: ${{matrix.os}}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all
      - name: Build Release Application
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - name: Install Clippy-Sarif
        uses: baptiste0928/cargo-install@v2
        with:
          crate: clippy-sarif
      - name: Install Sarif-fmt
        uses: baptiste0928/cargo-install@v2
        with:
          crate: sarif-fmt
      - name: Run rust-clippy
        run: cargo clippy --all --no-deps --all-features --message-format=json | uniq | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        env:
          RUSTFLAGS: ""
        continue-on-error: true
      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

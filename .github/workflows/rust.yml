name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: '28 13 * * 1'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions/cache@v3
        name: Rust Cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-build-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-build-cargo-
      - name: Target Cache
        uses: actions/cache@v3
        with:
          path: target/
          key: ${{runner.os}}-build-target-${{hashFiles('**/Cargo.lock')}}-${{hashFiles('**/*.rs')}}
          restore-keys: |
            ${{runner.os}}-build-target-${{hashFiles('**/Cargo.lock')}}-
            ${{runner.os}}-build-target-
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
  test:
    name: Test Rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions/cache@v3
        name: Rust Cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-build-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-build-cargo-
      - name: Target Cache
        uses: actions/cache@v3
        with:
          path: target/
          key: ${{runner.os}}-build-target-${{hashFiles('**/Cargo.lock')}}-${{hashFiles('**/*.rs')}}
          restore-keys: |
            ${{runner.os}}-build-target-${{hashFiles('**/Cargo.lock')}}-
            ${{runner.os}}-build-target-
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
  analyze:
    name: Clippy Analyze
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af #@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt
      - name: Run rust-clippy
        run: cargo clippy
          --all-features
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true
